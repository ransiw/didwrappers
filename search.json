[{"path":"https://ransiw.github.io/didwrappers/articles/my-article.html","id":"introduction-and-setup","dir":"Articles","previous_headings":"","what":"Introduction and setup","title":"Democratization on growth","text":"article applies didwrappers package dataset considers impact democratization per capita GDP growth. data study subset used following paper: Acemoglu, D., Naidu, S., Restrepo, P., & Robinson, J. . (2019). Democracy cause growth. Journal political economy, 127(1), 47-100. data sample attempt replicating original paper. results purely demonstrate functions package. balanced panel, estimates didwrappers , although standard errors differ. unbalanced panels, estimates can also differ. example considers reasons , provides guidance package might appropriate purposes. pre-processing needs done suitable estimation. First, year democratization missing non-democracies. Replace zero year later last year observation, 2010. estimator assumes -treated-always-treated type treatment. true democratization can democracy reversals breakdowns. several way accommodating reversals -treated-always-treated setup. One remove country-year records first breakdown. Another remove country-year records correspond breakdown. even different approach change identity codes rename country time democracy breaks . approach depends type dynamic effect might interest analyst. adopt second approach, removing reversals. country code (wbcode) numeric. must also make decision control group. default never democratized. demonstration purposes, change yet treated group.","code":"# load packages and data library(did) library(didwrappers) demgdp = didwrappers::demgdp demgdp[is.na(demgdp$YearFirstDemocracy),\"YearFirstDemocracy\"] <- 0 demgdp <- demgdp[demgdp$breakdown==0,] demgdp$wbnum <- as.numeric(as.factor(demgdp$wbcode))"},{"path":"https://ransiw.github.io/didwrappers/articles/my-article.html","id":"the-estimates-from-the-did-package","dir":"Articles","previous_headings":"","what":"The estimates from the did package","title":"Democratization on growth","text":"now produce estimates package. running estimator, informative consider groups data. group determined treatment time, case year democratization. shows 35 groups data, including group 42 countries never democracies period 1960-2010. group countries whose YearFirstDemocracy 1960 dropped analysis since enter analysis democracies already. expect results 33 groups. different lengths dynamic effects. example, group/country democratizes 2010 produce instantaneous effect. produce unconditional differences--differences estimates package: Messages warnings turned aesthetic purposes. However, unbalanced nature panel produce many messages. warnings related small groups, unavoidable sparsity democratizations occur. large number differences--difference estimates produce previous operation. overwhelming useful aggregate information. aggregate effects group level , many aggregations possible. Refer functions package. Arrange effects table plot group effects. dark green line group effect. lighter green band around uniform confidence interval, green dots individual differences--differences effects aggregated produce group-level estimates.  overall effect significance can also obtained. 95% confidence interval Overall democratization positive effect GDP growth. seems great amount heterogeneity. effects negative, rarely significantly.","code":"table(unique(demgdp[,c(\"wbcode\",\"YearFirstDemocracy\")])[,\"YearFirstDemocracy\"]) #> YearFirstDemocracy #>    0 1960 1961 1962 1965 1966 1970 1972 1973 1974 1975 1976 1977 1978 1979 1980  #>   42   33    2    1    1    5    5    2    2    1    3    2    3    4    2    3  #> 1981 1982 1983 1990 1991 1992 1993 1994 1995 1997 1999 2000 2002 2003 2004 2005  #>    2    4    1    7    9    6   11    8    2    1    2    3    1    1    1    2  #> 2007 2008 2010  #>    1    1    1 out <- did::att_gt(yname = \"gdppercapitaconstant2000us\",               gname = \"YearFirstDemocracy\",               idname = \"wbnum\",               tname = \"year\",               xformla = ~1,               data = demgdp,               panel = FALSE,               control_group = \"notyettreated\",               est_method = \"reg\"               ) group_effects <- did::aggte(out, type = \"group\", na.rm = TRUE) group_effects_df <- didwrappers::aggite_table(group_effects) plot(group_effects$egt, group_effects$att.egt, col=\"forestgreen\", lwd=5,      type = \"l\",      ylim = c(-6000,12000),      ylab = \"Group-level effect on GDP per capita\",      xlab = \"Time of democratization\",      main = \"Growth effect of democracy by democratizing year\",      cex.main = 1,      cex.lab = 0.82) points(out$group, out$att, pch=19, col=adjustcolor(\"olivedrab3\",0.4)) polygon(x=c(group_effects_df$egt, rev(group_effects_df$egt)),         y=c(group_effects_df$lci.egt, rev(group_effects_df$uci.egt)),         col=adjustcolor( \"forestgreen\", alpha.f = 0.3), border = FALSE) abline(h=0,lty=3,col=\"red\") # Overall effect group_effects$overall.att #> [1] 756.8741 # Confidence interval paste(\"[\",group_effects$overall.att-1.96*group_effects$overall.se,\",\", group_effects$overall.att+1.96*group_effects$overall.se,\"]\") #> [1] \"[ 240.54681719526 , 1273.20141833828 ]\""},{"path":"https://ransiw.github.io/didwrappers/articles/my-article.html","id":"the-estimates-from-the-didwrappers-package","dir":"Articles","previous_headings":"","what":"The estimates from the didwrappers package","title":"Democratization on growth","text":"didwrappers package maintains syntax package. algorithm slightly different. Instead calculating individual differences--differences estimates group level, calculates estimates unit level. case, country level. also restricts comparisons observed pre- post- treatment, units observed pre-treatment post-treatment removed. Group effects found aggregating individual estimates group level. Plotting group effects:  group level effects quite different previous estimates package. large negative effects addition postive effects. overall effect insignificant. 95% confidence interval","code":"out_it <- didwrappers::att_it(yname = \"gdppercapitaconstant2000us\",               gname = \"YearFirstDemocracy\",               idname = \"wbnum\",               tname = \"year\",               xformla = ~1,               data = demgdp,               panel = FALSE,               control_group = \"notyettreated\",               est_method = \"reg\"               ) group_effects_it <- didwrappers::aggite(out_it, type = \"group\", na.rm = TRUE) group_effects_it_df <- didwrappers::aggite_table(group_effects_it) group_effects_it_df <- group_effects_it_df[!is.na(group_effects_it_df$se.egt),] plot(group_effects_it$egt, group_effects_it$att.egt, col=\"forestgreen\", lwd=5,      type = \"l\",      ylim = c(-4000,6000),      ylab = \"Group-level effect on GDP per capita\",      xlab = \"Time of democratization\",      main = \"Growth effect of democracy by democratizing year\",      cex.main = 1,      cex.lab = 0.82) points(out_it$group, out_it$att, pch=19, col=adjustcolor(\"olivedrab3\",0.4)) polygon(x=c(group_effects_it_df$egt, rev(group_effects_it_df$egt)),         y=c(group_effects_it_df$lci.egt, rev(group_effects_it_df$uci.egt)),         col=adjustcolor( \"forestgreen\", alpha.f = 0.3), border = FALSE) abline(h=0,lty=3,col=\"red\") # overall effect group_effects_it$overall.att #> [1] -155.3961 # Confidence interval paste(\"[\",group_effects_it$overall.lci,\",\", group_effects_it$overall.uci,\"]\") #> [1] \"[ -362.725817297393 , 43.1088795272645 ]\""},{"path":"https://ransiw.github.io/didwrappers/articles/my-article.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"Democratization on growth","text":"caused differences? Comparison group effects show produced quite different effects. One biggest differences 1970 group. look group years 1969 1970. First look treatment group 1970. 5 countries treatment group. 5 countries enter analysis 1970. However, Ghana observed pre-democracy. Now consider countries might control group. Swaziland Cuba observed 1970. Otherwise, countries control group 1970 observed across years. estimates, counts didwrappers package 1969-1970 1969-1971 differences--differences estimate. package doesn’t produce counts, corresponding estimates 1969-1970, 1969-1971 differences--differences estimates 1969-1970 difference--difference estimates suffer severe case imbalance. algorithm uses 5 countries 1970 group. didwrappers estimates use Ghana group country observed 1960 1970. instantaneous effect estimate calculated differencing 1969 value Ghana, resulting large positive effect group richer countries Germany Ireland suddenly appear 1970 without seen 1969. type estimator appropriate depends ‘balancedness’ data. unbalanced data, algorithm implements repeated cross-section type analysis. , composition treatment group pre- post-treatment equal. appropriate individual-level records heterogeneity across individuals likely minimal. application countries, assumption may strong. Ghana Germany quite different . case Germany (refers West Germany), entry sample democratization. serious analysis democratization need check dates YearFirstDemocracy. consideration matters control group well. particular case, two countries suddenly appear 1970, effect imbalance small. Ensuring composition units pre- post-treatment equal results sample losses. case, Germany, Fiji, Ireland, Malta lost due lack pre-treatment information. important trade-consider.","code":"demgdp[demgdp$YearFirstDemocracy==1970 & demgdp$year %in% c(1969,1970),c(1:5,8)] #> # A tibble: 6 × 6 #>   country_name wbcode region  year gdppercapitaconstant2000us breakdown #>   <chr>        <chr>  <chr>  <dbl>                      <dbl>     <dbl> #> 1 Germany      DEU    INL     1970                     11895.         0 #> 2 Fiji         FJI    EAP     1970                      1382.         0 #> 3 Ghana        GHA    AFR     1969                       274.         0 #> 4 Ghana        GHA    AFR     1970                       294.         0 #> 5 Ireland      IRL    INL     1970                      7335.         0 #> 6 Malta        MLT    INL     1970                      1968.         0 demgdp[(demgdp$YearFirstDemocracy==0|demgdp$YearFirstDemocracy>1970) & demgdp$year %in% c(1969,1970),c(1:5,8)] #> # A tibble: 106 × 6 #>    country_name wbcode region  year gdppercapitaconstant2000us breakdown #>    <chr>        <chr>  <chr>  <dbl>                      <dbl>     <dbl> #>  1 Argentina    ARG    LAC     1969                      6515.         0 #>  2 Argentina    ARG    LAC     1970                      6611.         0 #>  3 Burundi      BDI    AFR     1969                       106.         0 #>  4 Burundi      BDI    AFR     1970                       127.         0 #>  5 Benin        BEN    AFR     1969                       292.         0 #>  6 Benin        BEN    AFR     1970                       292.         0 #>  7 Burkina Faso BFA    AFR     1969                       139.         0 #>  8 Burkina Faso BFA    AFR     1970                       137.         0 #>  9 Bolivia      BOL    LAC     1969                       954.         0 #> 10 Bolivia      BOL    LAC     1970                       927.         0 #> # ℹ 96 more rows attit_table(out_it)[out_it$group==1970 & out_it$t %in% c(1970,1971),c(\"id\",\"group\",\"t\",\"att\",\"count\")] #>       id group    t        att count #> 1210  41  1970 1970         NA     0 #> 1211  41  1970 1971         NA     0 #> 1560  54  1970 1970         NA     0 #> 1561  54  1970 1971         NA     0 #> 1660  59  1970 1970  -53.40957    53 #> 1661  59  1970 1971 -111.43377    53 #> 2260  74  1970 1970         NA     0 #> 2261  74  1970 1971         NA     0 #> 3160 108  1970 1970         NA     0 #> 3161 108  1970 1971         NA     0 dfit = data.frame(group=out$group,t=out$t,att=out$att) dfit[dfit$group==1970 & dfit$t %in% c(1970,1971),] #>     group    t      att #> 210  1970 1970 4236.862 #> 211  1970 1971 4297.849"},{"path":"https://ransiw.github.io/didwrappers/articles/my-article.html","id":"cohort-level-analysis","dir":"Articles","previous_headings":"","what":"Cohort level analysis","title":"Democratization on growth","text":"additional benefit extended package can limit comparisons within cohort. Using regionnum variable data block cohorts, Include region names encoded regionnum overall effect confidence interval Plot regional effects  Notice extensive regional level heterogeneity. Also note none industrialized countries included, lack industrialized non-democracies. explains difference overall effect democratization performed without within-cohort blocking, performed cohort blocking. Much positive effect attributable industralized countries. also insufficient control units within South Asian regions produce estimates. exercise demonstrative, used draw substantive conclusions relationship democracy growth.","code":"out_it <- didwrappers::att_it(yname = \"gdppercapitaconstant2000us\",                               gname = \"YearFirstDemocracy\",                               idname = \"wbnum\",                               tname = \"year\",                               cohort = \"regionnum\",                               customnames = c(\"regionnum\"),                               xformla = ~1,                               data = demgdp,                               panel = FALSE,                               control_group = \"notyettreated\",                               est_method = \"reg\" )  cohort_effects_it <- didwrappers::aggite(out_it, type = \"regionnum\", na.rm = TRUE) cohort_effects_it_df <- didwrappers::aggite_table(cohort_effects_it) regions = unique(demgdp[,c(\"region\",\"regionnum\")]) names(regions) <- c(\"region\",\"egt\")  cohort_effects_it_df = merge(cohort_effects_it_df,regions,by=\"egt\") cohort_effects_it$overall.att #> [1] -5.111773 paste0(\"[\",cohort_effects_it$overall.lci,\",\",cohort_effects_it$overall.uci, \"]\") #> [1] \"[-206.145840750434,195.698379214436]\" plot(cohort_effects_it_df$egt, cohort_effects_it_df$att.egt, col=\"forestgreen\", pch=19,      type = \"p\",      ylim = c(min(cohort_effects_it_df$lci.egt),max(cohort_effects_it_df$uci.egt)),      ylab = \"Regional effect on GDP per capita\",      xlab = \"Region\",      main = \"Growth effect of democracy by region\",      xaxt = \"n\",      cex.main = 1,      cex.lab = 1) axis(1, at = cohort_effects_it_df$egt, labels = cohort_effects_it_df$region) arrows(x0 = cohort_effects_it_df$egt, y0 = cohort_effects_it_df$lci.egt,         x1 = cohort_effects_it_df$egt, y1 = cohort_effects_it_df$uci.egt,         angle = 90, code = 3, length = 0.1) abline(h=0,lty=3,col=\"red\")"},{"path":"https://ransiw.github.io/didwrappers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ransi Clark. Author, maintainer.","code":""},{"path":"https://ransiw.github.io/didwrappers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clark R (2025). didwrappers: Expands Functionality R '' Package. R package version 1.1.0, https://github.com/ransiw/didwrappers.","code":"@Manual{,   title = {didwrappers: Expands Functionality of the R 'did' Package},   author = {Ransi Clark},   year = {2025},   note = {R package version 1.1.0},   url = {https://github.com/ransiw/didwrappers}, }"},{"path":"https://ransiw.github.io/didwrappers/index.html","id":"didwrappers","dir":"","previous_headings":"","what":"Expands Functionality of the R did Package","title":"Expands Functionality of the R did Package","text":"goal didwrappers extend functionality package, specifically within treatment-group heterogeneity unbalanced data. also allows additional type aggregations. Components estimates can aggregated unit-level, time-invariant variable (e.g: birth year individual, region country state). allows types non-binary treatments, dosage level received treated unit used aggregation level. See following examples.","code":""},{"path":"https://ransiw.github.io/didwrappers/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Expands Functionality of the R did Package","text":"can install development version didwrappers install CRAN Call vignettes browseVignettes(package = \"didwrappers\")","code":"# install.packages(\"devtools\") # devtools::install_github(\"ransiw/didwrappers\", build_vignettes = TRUE) # install.packages(\"didwrappers\") # library(didwrappers)"},{"path":"https://ransiw.github.io/didwrappers/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Expands Functionality of the R did Package","text":"basic example generating code sample dataset: Simulate sample data Run att_it() object tabulate can now aggregate post-treatment effects unit level. Now sample data frame different dosage amounts aggregate unit level. also aggregate dosage level specifying dosage type. functions can also accommodate unbalancedness. can impose unbalancedness simulated data. example drop first unit time period 11, essentially eliminates unit. also consider effect truncation outcome variable 100. Truncation affect units whose baselevels high. now calculate unit level treatment effect . Units 9 10 negative estimates caused truncation. alleviated matching units baseline levels follows.","code":"library(didwrappers) simdata = sim_data() head(simdata[,c(\"unit\",\"time\",\"treatg\",\"dosage\",\"y\")]) #>   unit time treatg dosage          y #> 1    1    5     10      1  0.9765028 #> 2    1    6     10      1  2.5040220 #> 3    1    7     10      1  4.1027499 #> 4    1    8     10      1  7.1109725 #> 5    1    9     10      1  8.3833244 #> 6    1   10     10      1 20.4952565 attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", data = simdata) attdf = attit_table(attobject) head(attdf[,1:7]) #>   id group  t        att        se        lci         uci #> 1  1    10  6 -0.3940472 0.2852624 -0.9531614  0.16506711 #> 2  1    10  7 -0.3538506 0.2263880 -0.7975711  0.08986987 #> 3  1    10  8  1.0170571 0.3313849  0.3675427  1.66657147 #> 4  1    10  9 -0.5391436 0.4444852 -1.4103345  0.33204729 #> 5  1    10 10 10.2803411 0.4146102  9.4677052 11.09297699 #> 6  1    10 11 10.0831698 0.4265082  9.2472138 10.91912586 agtobject = aggite(attobject,type=\"unit\") aggite_table(agtobject) #>    egt   att.egt    se.egt   lci.egt   uci.egt #> 1    1  9.595940 0.2222221  9.152127 10.058622 #> 2    2 11.364140 0.2669428 10.839662 11.924580 #> 3    3  8.988459 0.1963648  8.609782  9.379475 #> 4    4 10.282525 0.2718089  9.736423 10.807046 #> 5    5 10.479021 0.2401080 10.010325 10.942495 #> 6    6 10.149815 0.2251318  9.686151 10.592025 #> 7    7  9.940078 0.2575904  9.417874 10.436564 #> 8    8  9.296310 0.3063967  8.698213  9.914181 #> 9    9  8.834516 0.2861991  8.264489  9.413781 #> 10  10  8.999917 0.2523602  8.540064  9.494038 attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", customnames = \"dosage\", data = sim_data(dosage = rep(c(1,2),each=5))) agtobject = aggite(attobject,type=\"unit\") aggite_table(agtobject) #>    egt   att.egt    se.egt   lci.egt   uci.egt #> 1    1 10.494341 0.3189246  9.849312 11.104125 #> 2    2 10.831962 0.2183098 10.411235 11.245508 #> 3    3 10.077112 0.3115077  9.457087 10.657892 #> 4    4  9.476786 0.2625175  8.955249  9.998167 #> 5    5 10.790680 0.2505775 10.336551 11.302131 #> 6    6 19.947197 0.2370833 19.444063 20.412442 #> 7    7 19.304729 0.2191709 18.882496 19.727221 #> 8    8 20.342717 0.2574521 19.843688 20.841611 #> 9    9 21.226676 0.2494786 20.782271 21.746952 #> 10  10 20.120987 0.1713363 19.785358 20.443224 agtobject = aggite(attobject,type=\"dosage\") aggite_table(agtobject) #>   egt  att.egt    se.egt  lci.egt  uci.egt #> 1   1 10.35310 0.1364377 10.10538 10.62835 #> 2   2 20.19704 0.1223946 19.96002 20.43729 simdata = sim_data() simdata = simdata[!(simdata[,\"unit\"]==1 & simdata[,\"time\"]<11),] attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", panel = FALSE, data = simdata) #> Warning in pre_process_did_i(yname = yname, tname = tname, idname = idname, : Be aware that there are some small groups in your dataset. #>   Check groups: 10. agtobject = aggite(attobject,type=\"unit\", na.rm = TRUE) aggite_table(agtobject) #>   egt   att.egt    se.egt   lci.egt  uci.egt #> 1   2 11.491920 0.2909187 10.902494 12.04581 #> 2   3 10.550311 0.2094663 10.139954 10.98488 #> 3   4 11.303989 0.3319666 10.639628 11.93700 #> 4   5  9.783662 0.2384830  9.337403 10.28213 #> 5   6 10.500442 0.3010967  9.895773 11.07207 #> 6   7  6.939138 0.2554716  6.456224  7.43968 #> 7   8 10.332058 0.3093567  9.757034 10.95536 #> 8   9 10.451803 0.1841023 10.073357 10.79100 #> 9  10 11.044857 0.2762568 10.463495 11.55014 simdata = sim_data() simdata$y[simdata$y > 100] <- 100 unique(simdata[simdata$baselevel>75,c(\"unit\",\"treatg\", \"baselevel\")]) #>     unit treatg baselevel #> 183    8     15        80 #> 209    9     10        90 #> 235   10     15       100 #> 651   26      0        80 #> 677   27      0        85 #> 703   28      0        90 #> 729   29      0        95 #> 755   30      0       100 attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", panel = FALSE, data = simdata) agtobject = aggite(attobject,type=\"unit\", na.rm = TRUE) aggite_table(agtobject) #>    egt    att.egt    se.egt    lci.egt   uci.egt #> 1    1  13.465340 0.8844840  11.830112 15.253058 #> 2    2  15.224017 0.9524734  13.400294 17.119660 #> 3    3  14.060646 0.8611385  12.454377 15.826980 #> 4    4  13.215506 0.9698077  11.387653 15.204887 #> 5    5  12.749601 0.8282434  11.260808 14.527662 #> 6    6  12.115261 0.9067646  10.468479 13.962527 #> 7    7   8.837290 1.0430644   6.631224 10.784948 #> 8    8   7.044907 1.3059132   4.406511  9.480382 #> 9    9  -6.712105 2.1371959 -10.968982 -2.386859 #> 10  10 -11.057038 1.7962573 -14.591535 -7.820848 attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", panel = FALSE, xformla = ~y, data = simdata) #> Warning in pre_process_did_i(yname = yname, tname = tname, idname = idname, : Be aware that there are some small groups in your dataset. #>   Check groups: 10,15. agtobject = aggite(attobject,type=\"unit\", na.rm = TRUE) aggite_table(agtobject) #>    egt    att.egt    se.egt    lci.egt    uci.egt #> 1    1  9.9382459 0.2743492  9.3913751 10.4813759 #> 2    2 11.4515737 0.3223047 10.8136277 12.0789291 #> 3    3 11.3520309 0.3155919 10.7395491 11.9782597 #> 4    4 10.4021520 0.4888054  9.4066020 11.3713841 #> 5    5 12.4120363 0.6277576 11.1652206 13.6474967 #> 6    6 12.0471588 0.8276022 10.5050054 13.6802863 #> 7    7 11.9523477 0.6637983 10.6512357 13.2781011 #> 8    8 10.7928201 0.7436780  9.2738863 12.1896832 #> 9    9  3.1847441 0.6297052  1.8826304  4.3465517 #> 10  10  0.5338706 0.1355085  0.2922493  0.8082448"},{"path":"https://ransiw.github.io/didwrappers/reference/AGGITEobj.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Treatment Effect Parameters Object — AGGITEobj","title":"Aggregate Treatment Effect Parameters Object — AGGITEobj","text":"Objects class hold results aggregated unit-time average treatment effects","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/AGGITEobj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Treatment Effect Parameters Object — AGGITEobj","text":"","code":"AGGITEobj(   overall.att = NULL,   overall.se = NULL,   overall.lci = NULL,   overall.uci = NULL,   type = \"simple\",   type2 = NULL,   egt = NULL,   egt2 = NULL,   att.egt = NULL,   se.egt = NULL,   lci.egt = NULL,   uci.egt = NULL,   crit.val.egt = NULL,   inf.function = NULL,   min_e = NULL,   max_e = NULL,   balance_e = NULL,   min_agg = NULL,   call = NULL,   DIDparams = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/AGGITEobj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Treatment Effect Parameters Object — AGGITEobj","text":"overall.att estimated overall ATT overall.se Standard error overall ATT overall.lci lower confidence interval overall ATT overall.uci upper confidence interval overall ATT type type aggregated treatment effect parameter compute. One option \"simple\" (just computes weighted average unit-time average treatment effects). options \"dynamic\" (computes average effects across different lengths exposure treatment similar \"event study\"; overall effect averages effect treatment across positive lengths exposure); \"group\" (default option computes average treatment effects across different groups; overall effect averages effect across different groups); \"calendar\" (computes average treatment effects across different time periods; overall effect averages effect across time period). type2 second type aggregator egt Holds length exposure (dynamic effects), group, unit, cohort, custom aggregator, time period (calendar time effects) egt2 second aggregation type hold secondary object, NULL object att.egt ATT specific egt se.egt standard error specific egt bootstrap lci.egt lower confidence interval bootstrap uci.egt upper confidence interval bootstrap crit.val.egt Always NULL simultaneous option turned . inf.function bootstrap draws specific egt. Name carried package. min_e event studies, smallest event time compute dynamic effects .  default, min_e = -Inf effects lengths exposure computed. max_e event studies, largest event time compute dynamic effects .  default, max_e = Inf effects lengths exposure computed. balance_e set (one computes dynamic effects), balances sample respect event time.  example, balance.e=2, aggite drop groups exposed treatment least three periods. (initial period e=0 well next two periods e=1 e=2).  ensures composition groups change event time changes. min_agg minimum number unit-time effects required aggregation. Default 2. call function call aggite2 DIDparams DIDparams_i object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/AGGITEobj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Treatment Effect Parameters Object — AGGITEobj","text":"AGGITEobj","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/AGGITEobj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Treatment Effect Parameters Object — AGGITEobj","text":"","code":"# A helper function for [aggite()]. See examples in documentation in that function."},{"path":"https://ransiw.github.io/didwrappers/reference/DIDparams_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Title DIDparams_i — DIDparams_i","title":"Title DIDparams_i — DIDparams_i","text":"Title DIDparams_i","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/DIDparams_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title DIDparams_i — DIDparams_i","text":"","code":"DIDparams_i(   yname,   tname,   idname,   gname,   cohort = NULL,   xformla = NULL,   customnames = NULL,   data,   control_group,   anticipation = 0,   weightsname = NULL,   weightfs = FALSE,   alp = 0.05,   bstrap = TRUE,   biters = 1000,   clustervars = NULL,   cband = TRUE,   print_details = TRUE,   pl = FALSE,   cores = 1,   est_method = \"dr\",   overlap = \"trim\",   base_period = \"varying\",   panel = TRUE,   fixedbase = NULL,   nobase = FALSE,   n = NULL,   nG = NULL,   nT = NULL,   tlist = NULL,   glist = NULL,   idlist = NULL,   call = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/DIDparams_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title DIDparams_i — DIDparams_i","text":"yname name outcome variable data tname name column containing time periods data. Must numeric idname individual (cross-sectional unit) id name data. missing must numeric. gname name variable data contains first period particular observation treated. positive number observations treated groups. defines \"treatment-group\" unit belongs . zero (0) value considered unit never treated. unit treated last period tname also considered never treated. cohort name blocking variable data, specified comparisons within pre-treatment cohort. blocking required across entire trajectory, must imposed input data prior running function. xformla formula covariates include model.  form ~ X1 + X2. intercept automatically included. Default NULL equivalent xformla=~1. customnames names additional aggregation variables data. data name data.frame contains data. control_group units use control group. default \"nevertreated\" sets control group group units never participate treatment.  group change across groups time periods.  option set group=\"notyettreated\".  case, control group set group units yet participated treatment time period.  includes never treated units, includes additional units eventually participate treatment, participated yet. anticipation number time periods participating treatment units can anticipate participating treatment therefore can affect untreated potential outcomes. weightsname name column containing sampling weights. set, observations weight. weightfs boolean whether att's weighted. Default FALSE aggite step weighted unless specified. alp significance level, default 0.05 bstrap deprecated option. analytical standard errors reported. biters deprecated option, also see bstrap. clustervars deprecated option, also see bstrap. cband deprecated option. produce uniform confidence bands. print_details whether show details/progress computations. Default FALSE. pl whether use parallel processing cores number cores use parallel processing est_method method compute group-time average treatment effects.  default \"dr\" uses doubly robust approach DRDID package.  built-methods include \"ipw\" inverse probability weighting (Hajek type) \"reg\" first step regression estimators. overlap treatment units violate overlap conditions est_method \"dr\" \"ipw\". default, \"trim\", drop unit report calculated ATT analysis. Overlap violated maximum pscore exceeds 0.999 option, \"retain\" retains units inference. base_period whether use \"varying\" base period \"universal\" base period placebo tests. varying base period calculates pseudo-ATT every two consecutive pre-treatment periods. universal base period fixes base period always (g-anticipation-1).  Either choice results post-treatment estimates ATT(,t)'s. panel TRUE, data coerced balanced panel . Default TRUE. fixedbase user needs fix base period particular period, use option. Must numeric. Default NULL. nobase TRUE, baseline vectors set zero. Estimates differences--differences. Default FALSE. n number individual time observations nG number units just treatment cohorts nT number time periods tlist vector containing time periods glist vector containing treatment-time group allows repetitions. idlist vector containing id corresponds glist vector. call Function call att_it","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/DIDparams_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title DIDparams_i — DIDparams_i","text":"DIDparams_i object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/DIDparams_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title DIDparams_i — DIDparams_i","text":"","code":"# Helper function for [pre_process_did_i()]. See documentation of that function for an example."},{"path":"https://ransiw.github.io/didwrappers/reference/MP_i.html","id":null,"dir":"Reference","previous_headings":"","what":"MP_i — MP_i","title":"MP_i — MP_i","text":"Multi-period objects hold results unit-time average treatment effects","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/MP_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MP_i — MP_i","text":"","code":"MP_i(   id,   group,   t,   att,   V_analytical,   se,   c,   lci,   uci,   inffunc,   n = NULL,   aggite = NULL,   alp = 0.05,   ipwqual = NULL,   attcalc = NULL,   baseline = NULL,   baset = NULL,   outcome = NULL,   count = NULL,   DIDparams = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/MP_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MP_i — MP_i","text":"id unit unit-time treatment effects group group (defined period first treated) unit-time average treatment effect t time period group-time average treatment effect att estimate unit id time period t V_analytical Analytical estimator asymptotic variance-covariance matrix unit-time average treatment effects se standard errors unit-time average treatment effects. bootstrap set TRUE, provides bootstrap-based se. c always NULL lci lower confidence interval att uci upper confidence interval att inffunc influence function estimating group-time average treatment effects n number unique cross-sectional units (unique values idname) aggite aggregate treatment effects object alp significance level, default 0.05 ipwqual maximum propensity score attcalc similar att remove estimates propensity score problems baseline baseline unit baset baseline time unit outcome outcome unit time t count takes count number units component estimate DIDparams DIDparams_i object.  way optionally return parameters call att_it().","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/MP_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MP_i — MP_i","text":"MP object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/MP_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MP_i — MP_i","text":"","code":"# Helper function for [att_it()]. See documentation of that function for an example."},{"path":"https://ransiw.github.io/didwrappers/reference/aggite.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Unit-Time Average Treatment Effects — aggite","title":"Aggregate Unit-Time Average Treatment Effects — aggite","text":"function take unit-time average treatment effects aggregate smaller number parameters.  several possible aggregations including \"simple\", \"dynamic\", \"unit, \"group\",\"dosage\",\"calendar, custom aggregation name.\"","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Unit-Time Average Treatment Effects — aggite","text":"","code":"aggite(   MP,   type = \"group\",   balance_e = NULL,   min_e = -Inf,   max_e = Inf,   min_agg = 2,   na.rm = FALSE,   bstrap = NULL,   biters = NULL,   maxbackp = 5,   ignorebackp = FALSE,   cband = NULL,   alp = NULL,   clustervars = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/aggite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Unit-Time Average Treatment Effects — aggite","text":"MP MP_i object (.e., results att_it() method) type type aggregated treatment effect parameter compute. One option \"simple\" (just computes weighted average unit-time average treatment effects). options \"dynamic\" (computes average effects across different lengths exposure treatment similar \"event study\"; overall effect averages effect treatment across positive lengths exposure); \"group\" (default option computes average treatment effects across different groups; overall effect averages effect across different groups); \"calendar\" (computes average treatment effects across different time periods; overall effect averages effect across time period). balance_e set (one computes dynamic effects), balances sample respect event time.  example, balance.e=2, aggite drop groups exposed treatment least three periods. (initial period e=0 well next two periods e=1 e=2).  ensures composition groups change event time changes. min_e event studies, smallest event time compute dynamic effects .  default, min_e = -Inf effects lengths exposure computed. max_e event studies, largest event time compute dynamic effects .  default, max_e = Inf effects lengths exposure computed. min_agg minimum number unit-time effects required aggregation. Default 2. na.rm Logical value remove missing Values analyses. Defaults FALSE. bstrap always TRUE. Turning makes difference second-step. biters number bootstrap iterations use.  default value set MP_i object. maxbackp number pre-period observations sampled baseline variance. Default 5. ignorebackp Logical whether pre-period sampled baseline variance. Default FALSE. cband apply. confidence intervals bootstrapped confidence intervals second-step. alp significance level, default value set MP_i object. clustervars ignored function.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Unit-Time Average Treatment Effects — aggite","text":"AGGITEobj object holds results aggregation","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Unit-Time Average Treatment Effects — aggite","text":"","code":"# first run the att_it() function simdata = sim_data(posttreat=6, pretreat=2) attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", data = simdata)  # aggregate all post-treatment effects of each unit agtobject = aggite(attobject,type=\"unit\")"},{"path":"https://ransiw.github.io/didwrappers/reference/aggite2.html","id":null,"dir":"Reference","previous_headings":"","what":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","title":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","text":"function take unit-time average treatment effects aggregate sub-effects one aggregating type. Possible aggregations include pairs following: \"group\" custom aggregation name \"dynamic\"","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","text":"","code":"aggite2(   MP,   type = \"group\",   type2 = \"dynamic\",   balance_e = NULL,   min_e = -Inf,   max_e = Inf,   min_agg = 2,   na.rm = FALSE,   bstrap = NULL,   biters = NULL,   maxbackp = 5,   ignorebackp = FALSE,   cband = NULL,   alp = NULL,   clustervars = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/aggite2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","text":"MP MP_i object (.e., results att_it() method) type type aggregated treatment effect parameter compute. One option \"simple\" (just computes weighted average unit-time average treatment effects). options \"dynamic\" (computes average effects across different lengths exposure treatment similar \"event study\"; overall effect averages effect treatment across positive lengths exposure); \"group\" (default option computes average treatment effects across different groups; overall effect averages effect across different groups); \"calendar\" (computes average treatment effects across different time periods; overall effect averages effect across time period). type2 second type aggregator balance_e set (one computes dynamic effects), balances sample respect event time.  example, balance.e=2, aggite drop groups exposed treatment least three periods. (initial period e=0 well next two periods e=1 e=2).  ensures composition groups change event time changes. min_e event studies, smallest event time compute dynamic effects .  default, min_e = -Inf effects lengths exposure computed. max_e event studies, largest event time compute dynamic effects .  default, max_e = Inf effects lengths exposure computed. min_agg minimum number unit-time effects required aggregation. Default 2. na.rm Logical value remove missing Values analyses. Defaults FALSE. bstrap always TRUE. Turning makes difference second-step. biters number bootstrap iterations use.  default value set MP_i object maxbackp number pre-period observations sampled baseline variance. Default 5. ignorebackp Logical whether pre-period sampled baseline variance. Default FALSE. cband apply. confidence intervals bootstrapped confidence intervals second-step. alp Significance level, default value set MP_i object. clustervars apply.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","text":"AGGITEobj object holds results aggregation.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pair Aggregate Unit-Time Average Treatment Effects — aggite2","text":"","code":"# first run the att_it() function simdata = sim_data(posttreat=6) attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", data = simdata)  # aggregate all post-treatment effects of the group and dynamic level agtobject = aggite2(attobject,type=\"group\",type2=\"dynamic\")"},{"path":"https://ransiw.github.io/didwrappers/reference/aggite_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Issues tabulated aggite() results — aggite_table","title":"Issues tabulated aggite() results — aggite_table","text":"Issues tabulated aggite() results","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issues tabulated aggite() results — aggite_table","text":"","code":"aggite_table(AGGITE)"},{"path":"https://ransiw.github.io/didwrappers/reference/aggite_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issues tabulated aggite() results — aggite_table","text":"AGGITE object class AGGITEobj collects results aggite() aggite2() call","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Issues tabulated aggite() results — aggite_table","text":"data-frame aggregation type egt, corresponding att calculation att.egt, standard errors se.egt, confidence intervals.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/aggite_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Issues tabulated aggite() results — aggite_table","text":"","code":"# first run the att_it() function simdata = sim_data(posttreat=6, pretreat=2) attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", data = simdata)  # aggregate all post-treatment effects of each unit agtobject = aggite(attobject,type=\"unit\") agttable = aggite_table(agtobject)"},{"path":"https://ransiw.github.io/didwrappers/reference/att_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit-Time Average Treatment Effects — att_it","title":"Unit-Time Average Treatment Effects — att_it","text":"Computes 2x2 estimate unit-time level allows unit-level covariate matching staggered treatment setting. original package Brantly Callaway Pedro Santa'Anna () allows group-time ATTs units treated period single group. Unlike related package, provision repeated cross-sections.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/att_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit-Time Average Treatment Effects — att_it","text":"","code":"att_it(   yname,   tname,   idname,   gname,   cohort = NULL,   xformla = NULL,   customnames = NULL,   data,   panel = TRUE,   fixedbase = NULL,   nobase = FALSE,   control_group = c(\"nevertreated\", \"notyettreated\"),   anticipation = 0,   weightsname = NULL,   weightfs = FALSE,   alp = 0.05,   bstrap = TRUE,   cband = TRUE,   biters = 1000,   clustervars = NULL,   est_method = \"dr\",   overlap = \"trim\",   base_period = \"varying\",   print_details = FALSE,   pl = FALSE,   cores = 1 )"},{"path":"https://ransiw.github.io/didwrappers/reference/att_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit-Time Average Treatment Effects — att_it","text":"yname name outcome variable data tname name column containing time periods data. Must numeric idname individual (cross-sectional unit) id name data. missing must numeric. gname name variable data contains first period particular observation treated. positive number observations treated groups. defines \"treatment-group\" unit belongs . zero (0) value considered unit never treated. unit treated last period tname also considered never treated. cohort name blocking variable data, specified comparisons within pre-treatment cohort. blocking required across entire trajectory, must imposed input data prior running function. xformla formula covariates include model.  form ~ X1 + X2. intercept automatically included. Default NULL equivalent xformla=~1. customnames names additional aggregation variables data. data name data.frame contains data. panel TRUE, data coerced balanced panel . Default TRUE. fixedbase user needs fix base period particular period, use option. Must numeric. Default NULL. nobase TRUE, baseline vectors set zero. Estimates differences--differences. Default FALSE. control_group units use control group. default \"nevertreated\" sets control group group units never participate treatment.  group change across groups time periods.  option set group=\"notyettreated\".  case, control group set group units yet participated treatment time period.  includes never treated units, includes additional units eventually participate treatment, participated yet. anticipation number time periods participating treatment units can anticipate participating treatment therefore can affect untreated potential outcomes. weightsname name column containing sampling weights. set, observations weight. weightfs boolean whether att's weighted. Default FALSE aggite step weighted unless specified. alp significance level, default 0.05 bstrap deprecated option. analytical standard errors reported. cband deprecated option. produce uniform confidence bands. biters deprecated option, also see bstrap. clustervars deprecated option, also see bstrap. est_method method compute group-time average treatment effects.  default \"dr\" uses doubly robust approach DRDID package.  built-methods include \"ipw\" inverse probability weighting (Hajek type) \"reg\" first step regression estimators. overlap treatment units violate overlap conditions est_method \"dr\" \"ipw\". default, \"trim\", drop unit report calculated ATT analysis. Overlap violated maximum pscore exceeds 0.999 option, \"retain\" retains units inference. base_period whether use \"varying\" base period \"universal\" base period placebo tests. varying base period calculates pseudo-ATT every two consecutive pre-treatment periods. universal base period fixes base period always (g-anticipation-1).  Either choice results post-treatment estimates ATT(,t)'s. print_details whether show details/progress computations. Default FALSE. pl whether use parallel processing cores number cores use parallel processing","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/att_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit-Time Average Treatment Effects — att_it","text":"MP_i object containing results unit-time treatment effects.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/att_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unit-Time Average Treatment Effects — att_it","text":"","code":"attobject <- att_it(yname = \"y\", tname = \"time\", gname=\"treatg\", idname=\"unit\", data=sim_data())"},{"path":"https://ransiw.github.io/didwrappers/reference/attit_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Issues tabulated att_it() results — attit_table","title":"Issues tabulated att_it() results — attit_table","text":"Issues tabulated att_it() results","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/attit_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issues tabulated att_it() results — attit_table","text":"","code":"attit_table(MP)"},{"path":"https://ransiw.github.io/didwrappers/reference/attit_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issues tabulated att_it() results — attit_table","text":"MP MP_i object contains results att_it() call","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/attit_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Issues tabulated att_it() results — attit_table","text":"dataframe id, group, time, att estimates, standard errors confidence intervals.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/attit_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Issues tabulated att_it() results — attit_table","text":"","code":"simdata = sim_data() attobject = att_it(yname = \"y\", tname = \"time\", gname = \"treatg\", idname =\"unit\", data = simdata) attdf = attit_table(attobject)"},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Aggregated Treatment Effect Parameters — compute.aggite","title":"Compute Aggregated Treatment Effect Parameters — compute.aggite","text":"Computes aggregated average treatment effects","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Aggregated Treatment Effect Parameters — compute.aggite","text":"","code":"compute.aggite(   MP,   type = \"group\",   balance_e = NULL,   min_e = -Inf,   max_e = Inf,   min_agg = 2,   na.rm = FALSE,   bstrap = NULL,   biters = NULL,   maxbackp = 5,   ignorebackp = FALSE,   cband = NULL,   alp = NULL,   clustervars = NULL,   call = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Aggregated Treatment Effect Parameters — compute.aggite","text":"MP MP_i object (.e., results att_it() method) type type aggregated treatment effect parameter compute. One option \"simple\" (just computes weighted average unit-time average treatment effects). options \"dynamic\" (computes average effects across different lengths exposure treatment similar \"event study\"; overall effect averages effect treatment across positive lengths exposure); \"group\" (default option computes average treatment effects across different groups; overall effect averages effect across different groups); \"calendar\" (computes average treatment effects across different time periods; overall effect averages effect across time period). balance_e set (one computes dynamic effects), balances sample respect event time.  example, balance.e=2, aggite drop groups exposed treatment least three periods. (initial period e=0 well next two periods e=1 e=2).  ensures composition groups change event time changes. min_e event studies, smallest event time compute dynamic effects .  default, min_e = -Inf effects lengths exposure computed. max_e event studies, largest event time compute dynamic effects .  default, max_e = Inf effects lengths exposure computed. min_agg minimum number unit-time effects required aggregation. Default 2. na.rm Logical value remove missing Values analyses. Defaults FALSE. bstrap always TRUE. Turning makes difference second-step. biters number bootstrap iterations use.  default value set MP_i object. maxbackp number pre-period observations sampled baseline variance. Default 5. ignorebackp Logical whether pre-period sampled baseline variance. Default FALSE. cband apply. confidence intervals bootstrapped confidence intervals second-step. alp significance level, default value set MP_i object. clustervars ignored function. call function call aggite","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Aggregated Treatment Effect Parameters — compute.aggite","text":"AGGITEobj object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Aggregated Treatment Effect Parameters — compute.aggite","text":"","code":"# This is a helper function for [aggite()]. See that function for examples."},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","title":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","text":"computing pair aggregated group-time average treatment effects","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","text":"","code":"compute.aggite2(   MP,   type = \"group\",   type2 = \"dynamic\",   balance_e = NULL,   min_e = -Inf,   max_e = Inf,   min_agg = 2,   na.rm = FALSE,   bstrap = NULL,   biters = NULL,   maxbackp = 5,   ignorebackp = FALSE,   cband = NULL,   alp = NULL,   clustervars = NULL,   call = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","text":"MP MP_i object (.e., results att_it() method) type type aggregated treatment effect parameter compute. One option \"simple\" (just computes weighted average unit-time average treatment effects). options \"dynamic\" (computes average effects across different lengths exposure treatment similar \"event study\"; overall effect averages effect treatment across positive lengths exposure); \"group\" (default option computes average treatment effects across different groups; overall effect averages effect across different groups); \"calendar\" (computes average treatment effects across different time periods; overall effect averages effect across time period). balance_e set (one computes dynamic effects), balances sample respect event time.  example, balance.e=2, aggite drop groups exposed treatment least three periods. (initial period e=0 well next two periods e=1 e=2).  ensures composition groups change event time changes. min_e event studies, smallest event time compute dynamic effects .  default, min_e = -Inf effects lengths exposure computed. max_e event studies, largest event time compute dynamic effects .  default, max_e = Inf effects lengths exposure computed. min_agg minimum number unit-time effects required aggregation. Default 2. na.rm Logical value remove missing Values analyses. Defaults FALSE. bstrap always TRUE. Turning makes difference second-step. biters number bootstrap iterations use.  default value set MP_i object. maxbackp number pre-period observations sampled baseline variance. Default 5. ignorebackp Logical whether pre-period sampled baseline variance. Default FALSE. cband apply. confidence intervals bootstrapped confidence intervals second-step. alp significance level, default value set MP_i object. clustervars ignored function. call function call aggite2","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","text":"AGGITEobj object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.aggite2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Pair Aggregated Treatment Effect Parameters — compute.aggite2","text":"","code":"# This is a helper function for [aggite2()]. See examples in the documentation there."},{"path":"https://ransiw.github.io/didwrappers/reference/compute.att_it.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Group-Time Average Treatment Effects — compute.att_it","title":"Compute Group-Time Average Treatment Effects — compute.att_it","text":"compute.att_it main work computing multiperiod group-time average treatment effects balancing effects time period","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.att_it.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Group-Time Average Treatment Effects — compute.att_it","text":"","code":"compute.att_it(dp)"},{"path":"https://ransiw.github.io/didwrappers/reference/compute.att_it.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Group-Time Average Treatment Effects — compute.att_it","text":"dp DIDparams_i object","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.att_it.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Group-Time Average Treatment Effects — compute.att_it","text":"list object calculated att_it() corresponding influence functions","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/compute.att_it.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Group-Time Average Treatment Effects — compute.att_it","text":"","code":"# This is a helper function for [att_it()], but useful for debugging if problems occur. # See documentation of that function for examples."},{"path":"https://ransiw.github.io/didwrappers/reference/demgdp.html","id":null,"dir":"Reference","previous_headings":"","what":"GDP and democratization data (1960-2010) — demgdp","title":"GDP and democratization data (1960-2010) — demgdp","text":"dataset containing gross domestic product per capita 175 countries 1960 2010. subset dataset used :","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/demgdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDP and democratization data (1960-2010) — demgdp","text":"","code":"demgdp"},{"path":[]},{"path":"https://ransiw.github.io/didwrappers/reference/demgdp.html","id":"demgdp","dir":"Reference","previous_headings":"","what":"demgdp","title":"GDP and democratization data (1960-2010) — demgdp","text":"data frame 6934 rows 7 columns: year year observation country_name country name wbcode unique identifier particular country gdppercapitaconstant2000us GDP per capita US dollars dem indicator whether country democracy (1) (0) YearFirstDemocracy year country first becomes democracy since 1960. already democracy 1960, democracy 2010, missing breakdown indicator country reverted autocracy since democratizing 1960 regionnum region numbers: Africa (1), East Asia (2), East. Europe (3), Industrialized (4), Latin America (5), Middle East (6), South Asia (7)","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/demgdp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GDP and democratization data (1960-2010) — demgdp","text":"https://economics.mit.edu/people/faculty/daron-acemoglu/data-archive","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/demgdp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GDP and democratization data (1960-2010) — demgdp","text":"Acemoglu, D., Naidu, S., Restrepo, P., & Robinson, J. . (2019). Democracy cause growth. Journal political economy, 127(1), 47-100.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/mpdta.html","id":null,"dir":"Reference","previous_headings":"","what":"County Teen Employment Dataset — mpdta","title":"County Teen Employment Dataset — mpdta","text":"dataset containing (log ) teen employment 500 counties U.S. 2004 2007. subset dataset used Callaway Sant'Anna (2021). See paper additional descriptions.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/mpdta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"County Teen Employment Dataset — mpdta","text":"","code":"mpdta"},{"path":[]},{"path":"https://ransiw.github.io/didwrappers/reference/mpdta.html","id":"mpdta","dir":"Reference","previous_headings":"","what":"mpdta","title":"County Teen Employment Dataset — mpdta","text":"data frame 2500 rows 6 columns: year year observation countyreal unique identifier particular county lpop log 1000s population county lemp log teen employment county first.treat year state county located raised minimum wage, set equal 0 counties minimum wages equal federal minimum wage entire period treat whether particular county treated year","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/mpdta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"County Teen Employment Dataset — mpdta","text":"https://bcallaway11.github.io//","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/pre_process_did_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-processes for the DiD calculation — pre_process_did_i","title":"Pre-processes for the DiD calculation — pre_process_did_i","text":"Pre-processes data within att_it function compute.att_it","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/pre_process_did_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-processes for the DiD calculation — pre_process_did_i","text":"","code":"pre_process_did_i(   yname,   tname,   idname,   gname,   cohort = NULL,   xformla = NULL,   customnames = NULL,   data,   panel = TRUE,   fixedbase = NULL,   nobase = FALSE,   control_group = c(\"nevertreated\", \"notyettreated\"),   anticipation = 0,   weightsname = NULL,   weightfs = FALSE,   alp = 0.05,   bstrap = FALSE,   cband = FALSE,   biters = 1000,   clustervars = NULL,   est_method = \"dr\",   overlap = \"trim\",   base_period = \"varying\",   print_details = TRUE,   pl = FALSE,   cores = 1,   call = NULL )"},{"path":"https://ransiw.github.io/didwrappers/reference/pre_process_did_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-processes for the DiD calculation — pre_process_did_i","text":"yname name outcome variable data tname name column containing time periods data. Must numeric idname individual (cross-sectional unit) id name data. missing must numeric. gname name variable data contains first period particular observation treated. positive number observations treated groups. defines \"treatment-group\" unit belongs . zero (0) value considered unit never treated. unit treated last period tname also considered never treated. cohort name blocking variable data, specified comparisons within pre-treatment cohort. blocking required across entire trajectory, must imposed input data prior running function. xformla formula covariates include model.  form ~ X1 + X2. intercept automatically included. Default NULL equivalent xformla=~1. customnames names additional aggregation variables data. data name data.frame contains data. panel TRUE, data coerced balanced panel . Default TRUE. fixedbase user needs fix base period particular period, use option. Must numeric. Default NULL. nobase TRUE, baseline vectors set zero. Estimates differences--differences. Default FALSE. control_group units use control group. default \"nevertreated\" sets control group group units never participate treatment.  group change across groups time periods.  option set group=\"notyettreated\".  case, control group set group units yet participated treatment time period.  includes never treated units, includes additional units eventually participate treatment, participated yet. anticipation number time periods participating treatment units can anticipate participating treatment therefore can affect untreated potential outcomes. weightsname name column containing sampling weights. set, observations weight. weightfs boolean whether att's weighted. Default FALSE aggite step weighted unless specified. alp significance level, default 0.05 bstrap deprecated option. analytical standard errors reported. cband deprecated option. produce uniform confidence bands. biters deprecated option, also see bstrap. clustervars deprecated option, also see bstrap. est_method method compute group-time average treatment effects.  default \"dr\" uses doubly robust approach DRDID package.  built-methods include \"ipw\" inverse probability weighting (Hajek type) \"reg\" first step regression estimators. overlap treatment units violate overlap conditions est_method \"dr\" \"ipw\". default, \"trim\", drop unit report calculated ATT analysis. Overlap violated maximum pscore exceeds 0.999 option, \"retain\" retains units inference. base_period whether use \"varying\" base period \"universal\" base period placebo tests. varying base period calculates pseudo-ATT every two consecutive pre-treatment periods. universal base period fixes base period always (g-anticipation-1).  Either choice results post-treatment estimates ATT(,t)'s. print_details whether show details/progress computations. Default FALSE. pl whether use parallel processing cores number cores use parallel processing call Function call att_it","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/pre_process_did_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-processes for the DiD calculation — pre_process_did_i","text":"returns object DIDparams_i","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/pre_process_did_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-processes for the DiD calculation — pre_process_did_i","text":"","code":"# A helper function for the [att_it()] function, but is useful for debugging."},{"path":"https://ransiw.github.io/didwrappers/reference/process_attit.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Results from compute.att_it() — process_attit","title":"Process Results from compute.att_it() — process_attit","text":"Process Results compute.att_it()","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/process_attit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Results from compute.att_it() — process_attit","text":"","code":"process_attit(attgt.list)"},{"path":"https://ransiw.github.io/didwrappers/reference/process_attit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Results from compute.att_it() — process_attit","text":"attgt.list list results compute.att_it()","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/process_attit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Results from compute.att_it() — process_attit","text":"list elements: id id set results belongs group group id belongs tt time period set results belongs att unit time average treatment effect (NA propensity score problems) se standard error unit time average treatment effect (NA propensity score problems) lci lower confidence interval unit time average treatment effect (NA propensity score problems) uci upper confidence interval unit time average treatment effect (NA propensity score problems) ipwqual maximum propensity score baseline pre-treatment outcome value baset pre-treatment time outcome post-treatment outcome value attcalc unit time average treatment effect (always complete unless NaN)","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/process_attit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Results from compute.att_it() — process_attit","text":"","code":"# A helper function of [att_it()], but can be useful for debugging."},{"path":"https://ransiw.github.io/didwrappers/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a simulated dataset with treatment dosages and a control group — sim_data","title":"Creates a simulated dataset with treatment dosages and a control group — sim_data","text":"Creates simulated dataset treatment dosages control group","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a simulated dataset with treatment dosages and a control group — sim_data","text":"","code":"sim_data(   basetreat = seq(10, 100, 10),   timetreat = rep(c(10, 15), 5),   dosage = rep(c(1, 1), each = 5),   tef = rep(10, 10),   basecontrol = seq(5, 100, 5),   cohort = rep(c(1, 1, 1, 1, 1), 6),   pretreat = 5,   posttreat = 20,   ttr = 2,   siget = 1,   sigec = 1,   fixedbase = FALSE )"},{"path":"https://ransiw.github.io/didwrappers/reference/sim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a simulated dataset with treatment dosages and a control group — sim_data","text":"basetreat numeric vector specifies pre-treatment outcomes timetreat numeric vector length basetreat specifies treatment time (avoid negative zero times) dosage numeric vector length basetreat specifies treatment dosage received treatment unit. Zero control units. tef numeric vector length basetreat specifies treatment effect. argument dosage multiplies treatment effect number doses. basecontrol numeric vector specifies outcome level earliest treatment time cohort vector length basecontrol basetreat combined identifies cohort unit pretreat number pre-treatment periods earliest treated unit posttreat number post-treatment periods earliest treated unit. units treated posttreat periods earliest treated unit, never treated. ttr time trend siget standard error error term treatment group default 1 sigec standard error error term control group default 1 fixedbase baseline observation known therefore perturbed.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/sim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a simulated dataset with treatment dosages and a control group — sim_data","text":"dataframe identifies unit, time, treatment time, cohort, dosage, outcome","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/sim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a simulated dataset with treatment dosages and a control group — sim_data","text":"","code":"# A default dataframe with only one dosage level and one cohort sim_data() # A default dataframe with two different dosage levels sim_data(dosage = rep(c(1,2),each=5)) # A default dataframe with 5 different cohorts sim_data(cohort = rep(c(1,2,3,4,5),6))"},{"path":"https://ransiw.github.io/didwrappers/reference/std_ipw_did_panel_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","title":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","text":"archived version DRDID's std_ipw_did_panel without fastglm function","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/std_ipw_did_panel_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","text":"","code":"std_ipw_did_panel_archive(   y1,   y0,   D,   covariates,   i.weights = NULL,   boot = FALSE,   boot.type = \"weighted\",   nboot = NULL,   inffunc = FALSE )"},{"path":"https://ransiw.github.io/didwrappers/reference/std_ipw_did_panel_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","text":"y1 post-treatment vector y0 pre-treatment vector D binary treatment vector covariates matrix vector covariates train weights .weights Sample weights. Default NULL. boot logical whether bootstrap. Default FALSE. boot.type Type bootstrap. Default weighted bootstrap. nboot Number bootstraps inffunc logical whether report influence function .","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/std_ipw_did_panel_archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","text":"Returns object calculated ATT, standard error, confidence intervals, influence functions.","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/std_ipw_did_panel_archive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An archived version of the DRDID's std_ipw_did_panel without the fastglm function — std_ipw_did_panel_archive","text":"","code":"std_ipw_did_panel_archive(rep(1,20),rep(0,20),c(1,rep(0,19)),c(70,rep(50,9),rep(80,10))) #> $ATT #> [1] 0 #>  #> $se #> [1] 0 #>  #> $uci #> [1] 0 #>  #> $lci #> [1] 0 #>  #> $boots #> NULL #>  #> $att.inf.func #> NULL #>  #> $call.param #> std_ipw_did_panel_archive(y1 = rep(1, 20), y0 = rep(0, 20), D = c(1,  #>     rep(0, 19)), covariates = c(70, rep(50, 9), rep(80, 10))) #>  #> $argu #> $argu$panel #> [1] TRUE #>  #> $argu$normalized #> [1] TRUE #>  #> $argu$boot #> [1] FALSE #>  #> $argu$boot.type #> [1] \"weighted\" #>  #> $argu$nboot #> NULL #>  #> $argu$type #> [1] \"ipw\" #>  #>"},{"path":"https://ransiw.github.io/didwrappers/reference/str_split_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a string — str_split_one","title":"Split a string — str_split_one","text":"Split string","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/str_split_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a string — str_split_one","text":"","code":"str_split_one(string, pattern, n = Inf)"},{"path":"https://ransiw.github.io/didwrappers/reference/str_split_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a string — str_split_one","text":"string character vector , , one element. pattern regex pattern n number splits make","code":""},{"path":"https://ransiw.github.io/didwrappers/reference/str_split_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a string — str_split_one","text":"character vector.","code":""},{"path":"https://ransiw.github.io/didwrappers/news/index.html","id":"didwrappers-110","dir":"Changelog","previous_headings":"","what":"didwrappers 1.1.0","title":"didwrappers 1.1.0","text":"Bootstrap inference second stage","code":""},{"path":"https://ransiw.github.io/didwrappers/news/index.html","id":"major-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"didwrappers 1.1.0","text":"Turns wif functions instead bootstraps inference better coverage.","code":""},{"path":"https://ransiw.github.io/didwrappers/news/index.html","id":"didwrappers-100","dir":"Changelog","previous_headings":"","what":"didwrappers 1.0.0","title":"didwrappers 1.0.0","text":"version package released CRAN.","code":""},{"path":"https://ransiw.github.io/didwrappers/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"didwrappers 1.0.0","text":"Can now unit-level dids aggregations","code":""},{"path":"https://ransiw.github.io/didwrappers/news/index.html","id":"minor-improvements-and-bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"didwrappers 1.0.0","text":"Added examples","code":""}]
